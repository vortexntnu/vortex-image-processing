name: Python CI

on: [push, workflow_dispatch]

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: cache virtualenv
        uses: actions/cache@v3
        id: cache-venv
        with:
          path: ./.venv/
          key: ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-
      - name: Install dependencies
        shell: bash
        run: |
          python -m venv ./.venv
          source ./.venv/bin/activate
          python -m pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Install repo project # We do this since the install deps step can be skipped
        shell: bash
        run: |
          source ./.venv/bin/activate
          python -m pip install -U -e ./python

  lint:
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Restore Python virtual environment
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: ${{ runner.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('requirements.txt') }}
      - name: Lint Code
        shell: bash
        run: |
          source ./.venv/bin/activate
          pylint $(git ls-files '*.py')

  test:
    runs-on: ubuntu-latest
    env:
      ROBOFLOW_API_KEY: ${{ secrets.ROBOFLOW_API_KEY }}
      ROBOFLOW_PROJECT_ID: ${{ secrets.ROBOFLOW_PROJECT_ID }}
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Restore Python virtual environment
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: ${{ runner.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('requirements.txt') }}

      - name: Run tests
        shell: bash
        run: |
          python -m venv ~/.venv
          pytest .
